"use strict";(()=>{var e={};e.id=385,e.ids=[385],e.modules={5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6762:(e,t)=>{Object.defineProperty(t,"M",{enumerable:!0,get:function(){return function e(t,n){return n in t?t[n]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,n)):"function"==typeof t&&"default"===n?t:void 0}}})},6979:(e,t,n)=>{n.r(t),n.d(t,{config:()=>A,default:()=>p,routeModule:()=>m});var r={};n.r(r),n.d(r,{default:()=>f});var o=n(9947),i=n(2706),a=n(6762);let s=require("mongoose"),u=process.env.MONGODB_URI;if(!u)throw Error("Please add your Mongo URI to .env.local");let d=!1,c=async()=>{if(!d)try{await s.connect(u),d=!0,console.log("✅ MongoDB Connected")}catch(e){throw console.error("❌ Error connecting to MongoDB:",e),e}},l=new s.Schema({name:String,email:String,password:String}),P=s.models.User||s.model("User",l);async function f(e,t){if(await c(),"POST"===e.method){let n=await P.create(e.body);return t.status(201).json(n)}if("GET"===e.method){let e=await P.find();return t.status(200).json(e)}}let p=(0,a.M)(r,"default"),A=(0,a.M)(r,"config"),m=new o.PagesAPIRouteModule({definition:{kind:i.A.PAGES_API,page:"/api/users",pathname:"/api/users",bundlePath:"",filename:""},userland:r})},2706:(e,t)=>{Object.defineProperty(t,"A",{enumerable:!0,get:function(){return n}});var n=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})},9947:(e,t,n)=>{e.exports=n(5600)}};var t=require("../../webpack-api-runtime.js");t.C(e);var n=t(t.s=6979);module.exports=n})();